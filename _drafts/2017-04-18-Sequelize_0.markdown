---
title: Sequelize에서 parallel execution과 serial execution
---

## Summary
---------------------
 node js로 서버를 구성할 때 ORM framework로 sequelize를 사용한다. 여기서 메뉴항목과 같이 select box항목을 따로 테이블로 관리하는 경우 리스트들을 어떻게 불러올지 알아보자.

---------------------

Promise.all([
    models.Posts.findAll({
      attributes: ['id', 'title', 'content', 'author'],
      where: { isPublished: true },
      order: '"updatedAt" DESC'
    }),
    models.MenuItems.findAll({
      where: { isActive: true },
    })
  ]).then(function(values) {
    values.forEach(log);
    res.render('index', { });
  });

  models.Posts.findAll({
  }).then(function(values) {
     data['posts'] = values;
  });

  models.MenuItems.findAll({
  })
  .then(function(values) {
     data['menuItems'] = values;
  });

models.sequelize.Promise.all([
   models.Posts.findAll({
       attributes: ['id', 'title', 'content', 'author'],
       where: { isPublished: true },
       order: '"updatedAt" DESC'
   }),
   models.MenuItems.findAll({
       where: { isActive: true },
   })
  ])
  .spread(function(posts, menus) {
  });

models.Posts.findAll().then(function(posts) {
        data.posts = posts;
        return models.MenuItems.findAll();
    }).then(function (menuItems) {
        data.menuItems = menuItems;
        // at this point your data object has data.posts and data.menuItems
        res.send(data);
    });


Promise.join(
    models.Posts.findAll({
        attributes: ['id', 'title', 'content', 'author'],
        where: { isPublished: true },
        order: '"updatedAt" DESC'
    }),
    models.MenuItems.findAll({
        where: { isActive: true },
    })
  ).spread(function(posts, menus) {
  });
  
---
### References
---
- [https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Closures](https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Closures)